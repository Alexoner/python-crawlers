#数据源
input {
    file {
        path => "/Users/xueliang.xl/work/getter/2016-06-21/output/*.json"
        start_position => beginning 
        sincedb_path => "/dev/null"
        ignore_older => 0
        codec => "json"
    }
}

#中间处理
filter{
	#mutate主要是修改数据
	#房产的处理规则
	if [db_name] == "area_house"{
		mutate {
			#去掉不希望进入引擎的字段
			remove_field => [ "facility_dom","description","source_nav"]
			#将价格转为浮点、数量转为整形
			convert => {
						 "price" => "float"
						 "prop_price" => "float"
						 "second_count" => "integer"
						 "rend_count" => "integer"
					   }
			#仅仅对字符串有效，替换的可能为空的数据，用'-'替换		   
			gsub => [
				#邮编
				"post_code", "null", "-",
				#建筑年代
				"build_year","null", "-",
				#物业公司、开发公司
				"prop_company", "null","-",
				"developer", "null", "-",
				#小区地址
				"address", "null", "-",
				#标签
				"tags", "null", "-",
				#经纬度
				"latitude", "null", "-",
				"longitude", "null", "-",
				#小区别名
				"area_alias", "null", "-",
				#片区
				"sub_area", "null", "-",
				#地铁
				"subway", "null", "-"
			]
	    }
    }
    #代理数据的处理规则
	mutate {
		#去掉不希望进入的字段
		remove_field => ["path","@version","@timestamp","host"]
	 }
}

#输出
output {
	#房产数据直接写到引擎
	if [db_name] == 'area_house'{
		elasticsearch {
	        index => "areastaticentity"
	        document_type => "areainfo"
	        #使用生成好的ID作为文档的ID，这样去重
	        document_id => "%{id}"
	        manage_template => false
	    }
	}
	#代理数据写到redis引擎中
	if [db_name] == "proxy"{
		redis {
	        data_type => "list"
	        key => "proxylist"
	    }
	} 

	#潮流的数据直接写到引擎中
    if [db_name] == "trendtag"{
		elasticsearch {
	        index => "trendingstyle"
	        document_type => "trendtag"
	        #使用生成好的ID作为文档的ID，这样去重
	        document_id => "%{id}"
	        manage_template => false
	    }
	}
	if [db_name] == "trenduser"{
		elasticsearch {
	        index => "trendingstyle"
	        document_type => "trenduser"
	        #使用生成好的ID作为文档的ID，这样去重
	        document_id => "%{id}"
	        manage_template => false
	    }
	}
    stdout{
    	codec => rubydebug
    }
}
